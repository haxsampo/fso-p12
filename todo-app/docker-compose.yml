services:
  app:
    image: todo-front
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    volumes:
      - ./todo-frontend/:/usr/src/app
    environment:
      - WATCHPACK_POLLING=true
    container_name: todo-front-prod
  server:
    image: todo-back
    build:
      context: ./todo-backend/
      dockerfile: Dockerfile
      args:
        - DOCKER_ENV = TRUE
    volumes:
      - ./todo-backend/:/usr/src/app
    environment: # nää pitää ehkä olla eri jos haluaa eritellä dev ja prod databaset
      - REDIS_URL = redis://redis:6379
      - MONGO_URL = mongodb://the_username:the_password@mongo:27017/the_database_prod
      - DOCKER_ENV = TRUE
    container_name: todo-back-prod
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy-prod
    depends_on:
      - app
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database_prod
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
  redis:
    ports:
      - 6379:6379
    image: redis:7.0.12
    command: redis-server --appendonly yes --save 20 1 --loglevel warning --requirepass jotain
    volumes:
      - ./todo-backend/redis_data:/data

volumes:
  mongo_data:
